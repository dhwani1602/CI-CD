name: Development Workflow

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  # Job to set up the environment and run tests
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Set up Python environment (for a Python project)
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run Linting (using flake8 for Python)
    - name: Run Linting
      run: |
        pip install flake8
        flake8 .

    # Run tests (using pytest for Python)
    - name: Run Tests
      run: |
        pip install pytest
        pytest

  # Optional: Deployment job (for development environment deployment)
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development' && github.event_name == 'push'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Set up Deployment (could be any server, cloud, etc.)
    - name: Deploy to Development Environment
      run: |
        echo "Deploying to Development Environment..."
        # Add your deployment script or command here, e.g., SSH, Docker, etc.


name: CI/CD Pipeline - JavaScript & Python

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to run Python tests
  python-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies (Python)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Run Python tests
        run: |
          pytest  # You can replace this with your preferred Python test framework (e.g., unittest)

  # Job to run JavaScript tests
  node-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies (Node.js)
        run: npm install  # Install Node.js dependencies from package.json

      - name: Run JavaScript tests
        run: npm test  # Run tests with your chosen test framework (e.g., Jest, Mocha)

  # Job to deploy the application
  deploy:
    runs-on: ubuntu-latest
    needs: [python-test, node-test]  # Ensure that tests pass before deployment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python (for deployment tasks if needed)
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Set up Node.js (for deployment tasks if needed)
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install dependencies for deployment (both Python and Node.js)
      - name: Install dependencies (Python & Node.js)
        run: |
          pip install -r requirements.txt  # Python dependencies
          npm install  # Node.js dependencies



